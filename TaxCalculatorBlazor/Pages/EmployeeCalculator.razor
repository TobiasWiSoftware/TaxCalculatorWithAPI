@page "/EmployeeCalculator"

@{
    DateTime d = DateTime.Now;
}

@if (Input == null)
{
    <p><em>Loading</em></p>
}
else
{

    <div class="center">
        <div>
            <EditForm Model="@Input" OnValidSubmit="@CalculateTax" class="max">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="left">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="year" @onchange="() => HandleYearChange(2023)" id="year2023" checked=" @IsCurrentYear(2023)" />
                        <label class="form-check-label" for="year2023">2023</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="year" @onchange="() => HandleYearChange(2024)" id="year2024" checked="@IsCurrentYear(2024)" />
                        <label class="form-check-label" for="year2024">
                            2024
                        </label>
                    </div>
                </div>

                <ValidationMessage For="@(() => Input.Year)" />

                <!-- Firstname input -->
                <label class="form-label">Bruttoeinkommen</label>
                <input @bind="Input.GrossIncome" type="text" class="form-control" />

                <ValidationMessage For="@(() => Input.Year)" />

                <div class="left">
                    <div class="form-check">
                        <input onclick="radioCheck();" class="form-check-input" type="radio" @onchange="HandleBillingPeroidChange" checked name="BillingPeriod" id="month" />
                        <label class="form-check-label" for="registerRadio1">
                            <!-- korrigiert for-Attribut -->
                            Monat
                        </label>
                    </div>
                    <div class="form-check">
                        <input onclick="radioCheck();" class="form-check-input" type="radio" @onchange="HandleBillingPeroidChange" name="BillingPeriod" id="month" />
                        <label class="form-check-label" for="registerRadio2">
                            <!-- korrigiert for-Attribut -->
                            Jahr
                        </label>
                    </div>
                </div>

                <label class="form-label">Steuerklasse</label>
                <select @bind="Input.TaxClass" id="bundesland" name="TaxClass" class="form-control">
                    <option value="1">I</option>
                    <option value="2">II</option>
                    <option value="3">III</option>
                    <option value="4">IV</option>
                    <option value="5">V</option>
                    <option value="6">VI</option>
                </select>


                <input type="hidden" id="ChurchInput" />
                <div class="left">
                    <div class="form-check">
                        <input name="church" class="form-check-input" type="radio" @onchange="HandleChurchTaxChange" id="withchurch" />
                        <label class="form-check-label" for="exampleRadios1">
                            Mit Kirchensteuer
                        </label>
                    </div>
                    <div class="form-check">
                        <input name="church" class="form-check-input" type="radio" @onchange="HandleChurchTaxChange" id="withoutchurch" checked />
                        <label class="form-check-label">
                            Ohne Kirchensteuer
                        </label>
                    </div>
                </div>

                <label class="form-label">Alter</label>
                <input asp-for="Age" type="number" id="registerEMail" @bind="Input.Age" class="form-control" />


                <label class="form-label">Kinder</label>
                <div class="left">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" @onchange="HandleChildrenChange" name="HasChildren" id="registerRadio1" value="true" />
                        <label class="form-check-label">
                            Ja
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" @onchange="HandleChildrenChange" name="HasChildren" id="registerRadio2" value="false" checked />
                        <label class="form-check-label">
                            Nein
                        </label>
                    </div>
                </div>

                @if (ChildrenTaxCreditDisplayed)
                {
                    <label class="form-label">Kinderfreibeträge</label>
                    <select id="bundesland" name="ChildTaxCredit" @bind="Input.ChildTaxCredit" class="form-control">
                        <option value="0">0</option>
                        <option value="0.5">0.5</option>
                        <option value="1">1</option>
                        <option value="1.5">1.5</option>
                        <option value="2">2</option>
                        <option value="2.5">2.5</option>
                        <option value="3">3</option>
                        <option value="3.5">3.5</option>
                        <option value="4">4</option>
                        <option value="4.5">4.5</option>
                        <option value="5">5</option>
                        <option value="5.5">5.5</option>
                        <option value="6">6</option>
                        <option value="6.5">6.5</option>
                        <option value="7">7</option>
                        <option value="7.5">7.5</option>
                        <option value="8">8</option>
                        <option value="8.5">8.5</option>
                        <option value="9">9</option>
                        <option value="9.5">9.5</option>
                    </select>
                }

                <label>Krankenversicherung:</label>
                <select name="FederalInsurance" @bind="Input.HasFederalInsurance" class="form-control">
                    <option value="true">gesetzlich</option>
                    <option value="false">privat</option>
                </select>

                <label class="form-label">Krankenkassenzusatzbeitrag in %</label>
                <input @onchange="CheckComma" placeholder="@Input.InsuranceAdditionTotal" type="decimal" id="registerEMail" class="form-control" />

                <label>Rentenversicherung:</label>
                <select @bind="Input.HasFederalPension" name="Pension" class="form-control">
                    <option value="true">gesetzlich</option>
                    <option value="false">keine Versicherung</option>
                </select>

                <button type="submit" class="blue custom">Berechnen</button>


                <!-- Submit button -->


            </EditForm>
        </div>

        @if (Output != null)
        {
            <div class="output-container">
                <div class="row">
                    <div class="column left bold">Unverbindliche Berechnung</div>
                    <div class="column bold">Monat</div>
                    <div class="column bold">Jahr</div>
                </div>
                <div class="row">
                    <div class="column left">Bruttogehalt</div>
                    <div class="column">@Math.Round(Output.GrossIncome, 2).ToString("N2").Replace('.', ',')</div>
                    <div class="column">@Math.Round(Output.GrossIncome * 12, 2).ToString("N2").Replace('.', ',')</div>
                </div>
                <div class="row">
                    <div class="column left">Lohnsteuer</div>
                    <div class="column">@Math.Round(Output.TaxSum, 2).ToString("N2").Replace('.', ',')</div>
                    <div class="column">@Math.Round(Output.TaxSum * 12, 2).ToString("N2").Replace('.', ',')</div>
                </div>
                <div class="row">
                    <div class="column left">Solidariätszuschlag</div>
                    <div class="column">0</div>
                    <div class="column">0</div>
                </div>
                <div class="row">
                    <div class="column left">Steuern</div>
                    <div class="column">@Math.Round(Output.TaxSum * 12, 2).ToString("N2").Replace('.', ',')</div>
                    <div class="column">@Math.Round(Output.TaxSum * 12, 2).ToString("N2").Replace('.', ',')</div>
                </div>
                <div class="row">
                    <div class="column left">Krankenversicherung</div>
                    <div class="column">@Math.Round(Output.InsuranceSum, 2).ToString("N2").Replace('.', ',')</div>
                    <div class="column">@Math.Round(Output.InsuranceSum * 12, 2).ToString("N2").Replace('.', ',')</div>
                </div>
                <div class="row">
                    <div class="column left">Pflegeversicherung</div>
                    <div class="column">@Math.Round(Output.InsuranceCareSum, 2).ToString("N2").Replace('.', ',')</div>
                    <div class="column">@Math.Round(Output.InsuranceCareSum * 12, 2).ToString("N2").Replace('.', ',')</div>
                </div>
                <div class="row">
                    <div class="column left">Rentenversicherung</div>
                    <div class="column">@Math.Round(Output.PensionSum, 2).ToString("N2").Replace('.', ',')</div>
                    <div class="column">@Math.Round(Output.PensionSum * 12, 2).ToString("N2").Replace('.', ',')</div>
                </div>
                <div class="row">
                    <div class="column left">Arbeitslosenversicherung</div>
                    <div class="column">@Math.Round(Output.UnimploymentSum, 2).ToString("N2").Replace('.', ',')</div>
                    <div class="column">@Math.Round(Output.UnimploymentSum * 12, 2).ToString("N2").Replace('.', ',')</div>
                </div>
                <div class="row">
                    <div class="column left">Sozialabgaben</div>
                    <div class="column">@Math.Round(Output.InsurancesTotal, 2).ToString("N2").Replace('.', ',')</div>
                    <div class="column">@Math.Round(Output.InsurancesTotal * 12, 2).ToString("N2").Replace('.', ',')</div>
                </div>
                <div class="row">
                    <div class="column left bold">Netto / Überweisung</div>
                    <div class="column bold">@Math.Round(Output.Transferamount, 2).ToString("N2").Replace('.', ',')</div>
                    <div class="column bold">@Math.Round(Output.Transferamount * 12, 2).ToString("N2").Replace('.', ',')</div>
                </div>
            </div>


            <button type="submit" class="red custom">Drucken</button>
        }

    </div>


}

<style>

    @@media (min-width: 1100px) {
        div.center {
            font-size: 1em !important;
        }
    }



    div.center {
        display: block;
        font-size: 0.4em;
        padding-top: 3%;
        padding-bottom: 3%;
        padding-left: 15%;
        padding-right: 15%;
        justify-content: space-between;
    }

    .form-control {
        width: 100%; /* Setzen Sie die gewünschte Breite */
        padding: 0.5em; /* Etwas Polsterung für bessere Optik */
        border: 1px solid #ccc; /* Einen Rand hinzufügen */
        border-radius: 4px; /* Ecken abrunden für modernes Aussehen */
        font-size: inherit;
    }
        /* Anpassungen für das Fokusverhalten */
        .form-control:focus {
            border-color: #66afe9;
            outline: 0;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, .6);
        }

    .form-check {
        margin-right: 20px;
    }

    select.form-control option {
        color: #333; /* Adjust the color as needed */
    }

    select.form-control {
        color: #333; /* Adjust the color as needed */
    }

    button.custom {
        font-size: 1em;
        margin-top: 1.2em;
        margin-bottom: 1em;
    }

    button.blue {
        background: linear-gradient(to right, #36D1DC, #5B86E5);
        border: none;
        padding: 3px 25px;
        align-content: center;
        vertical-align: central;
        border-radius: 5px;
        color: white;
        cursor: pointer;
        transition: background 0.3s;
        width: 10em;
        height: 2em;
    }

    button.red {
        background: linear-gradient(to right, #e62e6a, #ff6b2b); /* Red gradient */
        border: none;
        padding: 3px 25px;
        align-content: center;
        vertical-align: middle; /* 'central' is not valid, changed to 'middle' */
        border-radius: 5px;
        color: white;
        cursor: pointer;
        transition: background 0.3s;
        width: 10em;
        height: 2em;
    }

        button.red:hover {
            background: linear-gradient(to right, #ff6b2b, #e62e6a); /* Slightly darker red gradient for hover effect */
        }

    .left {
        display: flex;
        flex-direction: row;
        margin-bottom: 10px; /* Add margin between radio button groups */
    }


    input {
        color: #333; /* Adjust the color as needed */
    }






    .output-container {
        display: grid;
        grid-template-rows: repeat(10, auto); /* 10 rows */
        grid-template-columns: 1.3fr 1fr 1fr;
        gap: 15px;
        padding: 20px;
        background-color: #fff; /* Optional: sets the background of the entire container */
        border-radius: 8px; /* Rounded corners for the container */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .row {
        display: contents;
    }

    .column {
        background-color: #e7f3f9;
        padding: 10px;
        padding-right: 1em;
        border: 1px solid #b8dcef;
        text-align: right;
    }

    .left {
        text-align: left !important;
    }

    .bold {
        font-weight: bold !important;
    }

    .column:hover {
        transform: translateY(-5px); /* Slight raise effect on hover */
        box-shadow: 0 2px 5px rgba(0, 102, 204, 0.2); /* Shadow effect on hover */
        background-color: #d1e9f7;
    }

</style>


